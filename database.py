import mysql.connector
from solution import readDataFromJsonFile

# need to run this cmd: sudo /etc/init.d/mysql start
class DB:
	def __init__(self, database):
		self.database= database
		self.tables= ["Démographie","Handicap","Education_et_alphabétisation","Langues_locales_utilisées", "Activité_et_emploi", "Conditions_d_habitat"]

	def connectDB(self):
		self.con = mysql.connector.connect(
		  host="localhost",
		  user="root"
		)
		self.mycursor= self.con.cursor()
		self.mycursor.execute("CREATE DATABASE IF NOT EXISTS " + self.database +";") #we create the db if it doesn't already exist
		self.mycursor.execute("USE " + self.database  +";");

	def createTables(self):
		for table in self.tables:
			self.mycursor.execute("DROP TABLE IF EXISTS "+ table +";")
		self.mycursor.execute("DROP TABLE IF EXISTS Communes;")
		self.mycursor.execute("CREATE TABLE Communes ( code_commune VARCHAR (10) NOT NULL, code_province VARCHAR(7) NOT NULL, code_region VARCHAR(4) NOT NULL, PRIMARY KEY (code_commune));")

		for table in self.tables:
			self.mycursor.execute("CREATE TABLE " + table +" ( ID int NOT NULL AUTO_INCREMENT, code_commune VARCHAR (10) NOT NULL, INDICATEUR VARCHAR(200) NOT NULL, TYPE VARCHAR(1) NOT NULL, SEX VARCHAR(1), OBSERVATION DOUBLE NOT NULL, PRIMARY KEY (ID), FOREIGN KEY (code_commune) REFERENCES Communes(code_commune));")
	
	def fillTable(self, code, data):
		querry= "INSERT INTO Communes (code_commune , code_province, code_region) VALUES (%s, %s, %s);"
		s= code.split(".")
		vals= (code, s[0]+"."+s[1], s[0])
		try:
			self.mycursor.execute(querry, vals)
			for table in self.tables:
				for indicateur in data[table]:
					s= indicateur["INDICATEUR"].split("_", 1)
					querry= "INSERT INTO " + table + " (code_commune, INDICATEUR, TYPE, SEX, OBSERVATION) VALUES (%s, %s, %s, %s, %s);"
					vals= (code, s[1], s[0][1], s[0][2] if len(s[0])==3 else None, isfloat(indicateur["DATA2014"]))
					self.mycursor.execute(querry, vals)
			self.con.commit()
		except mysql.connector.errors.IntegrityError as err:
			print(code, " Already Added !")

	def execute(self, querry):
		self.mycursor.execute(querry)
		return self.mycursor.fetchall()

	def __del__(self):
		self.mycursor.close()
		self.con.close()

def isfloat(num):
	try:
		return float(num)
	except:
		return 0

def main():
	db= DB("RGPH")
	db.connectDB()

	codes= ['066.01.03', '066.03.03', '066.03.05', '066.03.07', '066.03.09', '066.05.03', '391.01.01', '391.05.01', '391.05.03', '391.05.05', '391.05.07', '391.09.01', '391.09.03', '121.01.01', '121.03.01', '121.03.03', '121.03.05', '321.01.01', '321.01.03', '321.01.05', '321.03.01', '321.03.03', '321.03.05', '321.05.01', '321.05.03', '321.05.05', '321.05.07', '071.01.01', '071.01.03', '071.03.01', '071.03.03', '071.03.05', '071.05.01', '071.05.03', '221.01.01', '221.03.01', '221.03.03', '221.03.05', '221.03.07', '221.03.09', '261.01.01', '261.01.03', '261.03.01', '261.03.03', '261.03.05', '261.03.07', '261.03.09', '261.03.11', '261.03.13', '261.05.01', '261.05.03', '261.05.05', '261.05.07', '261.05.09', '261.05.11', '261.05.13', '261.05.15', '261.05.17', '261.05.19', '261.05.21', '521.01.01', '521.01.03', '521.03.01', '521.03.03', '521.05.01', '521.05.03', '521.05.05', '551.01.01', '551.01.03', '551.01.05', '551.01.07', '551.03.01', '551.03.03', '551.03.05', '551.03.07', '551.05.01', '551.05.03', '551.05.05', '551.05.07', '551.05.09', '551.05.11', '551.07.01', '551.07.03', '551.07.05', '551.07.07', '551.07.09', '551.07.11', '001.01.01', '001.05.01', '001.05.03', '001.05.05', '001.05.07', '001.05.09', '001.05.11', '001.05.13', '001.05.15', '001.05.21', '001.05.23', '001.05.25', '001.05.29', '163.01.03', '163.01.11', '163.03.05', '163.03.07', '163.03.09', '163.03.13', '163.03.15', '163.03.25', '163.03.33', '163.03.35', '163.03.37', '163.03.39', '163.05.03', '163.05.11', '163.05.19', '163.05.21', '163.05.31', '163.07.01', '163.07.17', '163.07.23', '163.07.27', '163.07.29', '273.01.05', '273.01.13', '273.01.15', '273.05.17', '273.05.19', '273.05.27', '401.01.05', '401.01.07', '401.01.09', '401.01.11', '401.03.01', '401.03.03', '401.03.05', '401.03.07', '401.03.09', '401.03.11', '401.03.13', '401.03.15', '401.03.17', '401.05.01', '401.05.03', '401.05.05', '401.05.07', '401.05.09', '401.01.03', '401.05.11', '401.05.13', '401.05.15', '401.05.17', '401.05.19', '401.05.21', '401.05.23', '401.05.25', '401.05.27', '401.05.29', '401.05.31', '401.05.33', '401.07.01', '401.07.03', '401.07.05', '401.07.07', '401.07.09', '401.07.11', '541.01.01', '541.01.03', '541.01.05', '541.01.07', '541.01.09', '541.01.11', '541.01.13', '541.03.01', '541.03.03', '541.03.05', '541.03.07', '541.03.09', '541.03.11', '541.03.13', '541.03.15', '541.03.17', '541.03.19', '541.03.21', '541.03.23', '541.03.25', '541.03.27', '541.03.29', '541.03.31', '541.04.07', '541.04.09', '541.04.13', '541.04.17', '541.04.21', '541.04.23', '541.04.25', '541.04.29', '541.04.33', '541.04.35', '541.04.37', '541.04.39', '541.04.47', '541.04.49', '541.04.53', '541.04.59', '541.04.61', '541.04.65', '541.04.67', '541.04.69', '541.05.01', '541.05.03', '541.05.05', '541.05.07', '541.05.09', '541.05.11', '541.05.13', '541.05.15', '541.05.17', '541.05.19', '541.05.21', '541.05.23', '541.05.25', '541.05.27', '541.05.29', '541.05.31', '541.05.33', '541.07.01', '541.07.03', '541.07.05', '541.07.07', '541.07.09', '541.07.11', '541.07.13', '541.07.15', '541.07.17', '541.07.19', '541.07.21', '541.07.23', '541.07.25', '541.09.01', '541.09.03', '541.09.05', '541.09.11', '541.09.15', '541.09.19', '541.09.27', '541.09.31', '541.09.41', '541.09.43', '541.09.45', '541.09.51', '541.09.55', '541.09.57', '541.09.63', '541.09.71', '581.01.01', '581.01.03', '581.01.05', '581.01.07', '581.03.01', '581.03.03', '581.03.05', '581.03.07', '581.03.09', '581.03.11', '581.03.13', '581.03.15', '581.03.17', '581.05.01', '581.05.03', '581.05.05', '581.05.07', '581.05.09', '581.05.11', '581.05.13', '581.05.15', '581.07.01', '581.07.03', '581.07.05', '581.07.07', '581.07.09', '581.07.11', '581.07.13', '581.07.15', '581.07.17', '581.09.01', '581.09.03', '581.09.05', '581.09.07', '581.09.09', '581.09.11', '581.11.01', '581.11.03', '581.11.05', '581.11.07', '581.11.09', '581.11.11', '581.11.13', '581.11.15', '587.01.01', '587.01.13', '587.03.01', '587.03.03', '587.03.05', '587.03.07', '587.03.21', '587.03.25', '587.03.27', '587.03.31', '587.03.37', '587.03.39', '587.03.41', '587.09.09', '587.09.11', '587.09.13', '587.09.15', '587.09.17', '587.09.19', '587.09.23', '587.09.29', '587.09.33', '587.09.35', '587.09.43', '587.09.45', '281.01.01', '281.01.05', '281.01.07', '281.01.09', '281.01.11', '281.03.01', '281.03.03', '281.03.05', '281.03.07', '281.03.09', '281.03.11', '281.03.13', '281.05.01', '281.05.03', '281.05.05', '281.05.07', '281.05.09', '281.05.11', '281.05.13', '281.05.15', '281.07.01', '281.07.03', '281.07.05', '281.07.07', '281.09.01', '281.09.03', '281.09.05', '281.09.07', '281.09.09', '281.09.11', '281.09.13', '281.09.15', '481.01.01', '481.01.03', '481.01.05', '481.01.07', '481.01.09', '481.01.11', '481.03.01', '481.03.03', '481.03.05', '481.03.07', '481.03.09', '481.03.11', '481.03.13', '481.03.15', '481.03.17', '481.03.19', '481.03.21', '481.05.01', '481.05.03', '481.05.05', '481.05.07', '481.05.09', '481.05.11', '481.07.01', '481.07.03', '481.07.05', '481.07.07', '481.07.09', '481.07.11', '481.07.13', '481.07.15', '481.07.17', '481.07.19', '481.09.01', '481.09.03', '481.09.05', '481.09.07', '481.09.09', '481.09.11', '481.09.13', '111.01.01', '111.01.03', '111.03.01', '111.03.03', '111.03.05', '111.03.07', '111.03.09', '111.03.11', '111.03.13', '111.03.15', '111.03.17', '111.03.19', '111.05.01', '111.05.03', '111.05.04', '111.05.05', '311.01.01', '311.01.03', '311.01.05', '311.01.07', '311.01.09', '311.03.01', '311.03.03', '311.03.05', '311.03.07', '311.03.09', '311.03.11', '311.03.13', '311.03.15', '311.05.01', '311.05.03', '311.05.05', '311.05.07', '311.05.09', '311.05.11', '311.05.13', '311.05.15', '311.07.01', '311.07.03', '311.07.05', '311.07.07', '311.07.09', '311.07.11', '311.07.13', '311.07.15', '311.07.17', '311.07.19', '461.01.01', '461.01.03', '461.01.05', '461.01.07', '461.01.09', '461.01.11', '461.01.13', '461.01.15', '461.03.01', '461.03.03', '461.03.05', '461.03.07', '461.03.09', '461.03.11', '461.03.13', '461.03.15', '461.03.17', '461.03.19', '461.03.21', '461.03.23', '461.03.25', '461.03.27', '461.03.29', '461.03.31', '461.03.33', '461.05.01', '461.05.11', '461.05.13', '461.05.15', '461.05.25', '461.05.27', '461.05.29', '461.05.31', '461.05.33', '461.05.35', '461.07.03', '461.07.05', '461.07.07', '461.07.09', '461.07.01', '461.07.11', '461.07.13', '461.07.15', '461.07.17', '461.07.19', '461.07.21', '461.08.03', '461.08.05', '461.08.07', '461.08.09', '461.08.17', '461.08.19', '461.08.21', '461.08.23', '461.09.01', '461.09.03', '461.09.05', '461.09.07', '461.09.09', '461.09.11', '461.09.13', '461.09.15', '461.09.17', '461.09.19', '461.09.21', '461.09.23', '461.09.25', '461.09.27', '461.09.31', '461.09.29', '041.01.01', '041.03.01', '041.03.03', '041.03.05', '041.03.07', '041.03.09', '041.03.11', '041.03.13', '041.03.15', '041.03.17', '041.03.19', '041.03.21', '041.03.23', '041.03.25', '041.03.27', '041.03.29', '041.05.01', '041.05.03', '041.05.05', '041.05.07', '041.05.09', '041.05.11', '041.05.13', '041.05.15', '041.05.17', '041.05.19', '041.07.01', '041.07.03', '041.07.05', '041.07.07', '041.07.09', '041.07.11', '041.07.13', '041.09.01', '041.09.03', '041.09.05', '041.09.07', '041.09.09', '041.09.11', '161.01.01', '161.01.03', '161.03.01', '161.03.03', '161.03.05', '161.03.07', '161.03.09', '161.03.11', '161.03.13', '161.03.15', '161.05.01', '161.05.03', '161.05.05', '161.05.07', '161.05.09', '161.05.11', '161.05.13', '161.05.15', '161.05.17', '161.07.01', '161.07.03', '161.07.05', '161.07.07', '161.07.09', '161.07.11', '161.07.13', '161.07.15', '161.09.01', '161.09.03', '161.09.05', '161.09.07', '161.09.09', '161.09.11', '161.09.13', '161.09.15', '191.01.01', '191.01.03', '191.01.05', '191.01.07', '191.01.09', '191.03.01', '191.03.03', '191.03.05', '191.03.07', '191.03.09', '191.03.11', '191.03.13', '191.03.15', '191.03.17', '191.03.19', '191.03.21', '191.03.23', '191.03.25', '191.03.27', '191.03.29', '191.03.31', '191.03.33', '191.03.35', '191.03.37', '191.03.39', '191.03.41', '191.05.01', '191.05.03', '191.05.05', '191.05.07', '191.05.09', '191.05.11', '191.05.13', '191.05.15', '191.05.16', '191.05.17', '191.05.19', '191.05.21', '191.05.23', '191.05.25', '191.05.27', '191.05.29', '191.05.31', '191.05.33', '191.07.01', '191.07.03', '191.07.05', '191.07.07', '191.07.09', '191.07.11', '191.07.13', '191.07.15', '191.07.17', '191.07.19', '191.07.21', '191.07.23', '191.07.25', '191.09.01', '191.09.03', '191.09.05', '191.09.07', '191.09.09', '191.09.11', '191.09.13', '191.09.15', '191.09.17', '191.09.19', '211.01.01', '211.01.03', '211.01.05', '211.01.07', '211.01.09', '211.03.01', '211.03.03', '211.03.05', '211.03.07', '211.03.09', '211.03.11', '211.03.13', '211.03.15', '211.03.17', '211.03.19', '211.03.21', '211.03.23', '211.03.25', '211.03.27', '211.03.29', '211.03.31', '211.03.33', '211.03.35', '211.03.37', '211.03.39', '211.03.41', '211.03.43', '211.03.45', '211.03.47', '211.03.49', '211.03.51', '211.05.01', '211.05.03', '211.05.05', '211.05.07', '211.05.09', '211.05.11', '211.05.13', '211.05.15', '211.05.17', '211.05.19', '211.05.21', '211.05.23', '211.05.25', '211.05.27', '211.05.29', '211.05.31', '211.05.33', '211.05.35', '211.05.37', '211.05.39', '211.05.41', '211.05.43', '211.05.45', '211.05.47', '211.05.49', '211.05.51', '351.01.03', '351.01.05', '351.01.07', '351.01.01', '351.01.09', '351.01.11', '351.03.01', '351.03.03', '351.03.05', '351.03.07', '351.03.09', '351.03.11', '351.05.01', '351.05.03', '351.05.05', '351.05.07', '351.05.09', '351.05.11', '351.05.13', '113.01.01', '113.01.05', '113.01.07', '113.01.09', '113.01.25', '113.01.29', '113.03.01', '113.03.07', '113.03.09', '113.03.11', '113.05.03', '113.05.05', '113.05.13', '113.05.15', '113.05.17', '113.05.19', '251.01.01', '251.01.03', '251.03.01', '251.03.03', '251.03.05', '251.03.07', '251.03.09', '251.03.11', '251.05.01', '251.05.03', '251.05.05', '251.05.07', '275.01.03', '275.01.17', '275.01.35', '275.03.03', '275.03.05', '275.03.07', '275.03.09', '275.03.15', '275.03.21', '275.05.01', '275.05.11', '275.05.13', '275.05.15',
	 '381.01.01', '381.01.03', '381.01.05', '381.01.07', '381.01.09', '381.03.01', '381.03.03', '275.03.13', '381.03.05', '381.03.07', '381.03.09', '381.03.11', '381.03.13', '381.05.01', '381.05.03', '381.05.05', '381.05.07', '381.05.09', '381.05.11', '381.05.13', '381.05.15', '381.05.17', '381.05.19', '381.07.01', '381.07.03', '381.07.05', '381.07.07', '381.07.09', '381.07.11', '381.07.13', '381.07.15', '381.07.17', '381.09.01', '381.09.03', '381.09.05', '381.09.07', '381.09.09', '381.09.11', '381.09.13', '381.09.15', '381.09.17', '381.09.19', '381.09.21', '381.09.23', '381.09.25', '381.09.27', '381.09.29', '411.01.11', '411.01.19', '411.01.23', '411.07.01', '411.07.03', '411.07.05', '411.07.07', '411.07.09', '411.07.11', '411.07.17', '411.07.19', '533.01.13', '533.01.15', '533.01.33', '533.03.05', '533.03.15', '533.03.17', '533.03.19', '533.07.03', '533.07.09', '533.07.13', '533.07.21', '533.09.01', '533.09.07', '533.09.11', '141.01.41', '141.01.21', '141.01.11', '141.01.01', '141.01.23', '141.01.61', '141.01.31', '141.01.25', '141.01.03', '141.01.81', '141.01.13', '141.01.71', '141.01.63', '141.01.07', '141.01.51', '141.01.53', '141.01.73', '355.01.03', '355.01.05', '355.03.01', '355.03.03', '355.03.05', '371.01.03', '371.01.01', '371.03.01', '371.03.03', '371.03.05', '371.03.07', '385.01.03', '385.03.01', '385.03.03', '385.03.05', '291.01.01', '291.01.03', '291.01.05', '291.03.01', '291.03.03', '291.03.05', '291.03.07', '291.03.09', '291.03.11', '291.03.13', '291.03.15', '291.03.17', '291.05.01', '291.05.03', '291.05.05', '291.05.07', '291.05.09', '291.05.11', '291.05.13', '291.07.01', '291.07.05', '291.07.07', '291.07.09', '291.07.11', '291.07.13', '291.07.15', '291.09.01', '291.09.03', '291.09.05', '291.09.07', '291.09.09', '291.09.11', '291.09.13', '291.09.15', '291.09.17', '421.01.01', '421.01.03', '421.01.05', '421.01.06', '421.01.07', '421.01.09', '441.01.03', '441.01.05', '441.01.06', '441.01.07', '441.01.09', '441.03.01', '441.03.03', '501.01.01', '501.01.03', '501.01.05', '501.01.07', '501.03.01', '501.03.03', '501.03.11', '501.05.01', '501.05.03', '501.05.05', '181.01.01', '181.01.03', '181.01.05', '181.01.07', '181.01.09', '181.03.01', '181.03.03', '181.03.05', '181.03.07', '181.03.09', '181.03.11', '181.05.01', '181.05.03', '181.05.05', '181.05.07', '181.05.09', '181.05.11', '181.07.01', '181.07.03', '181.07.05', '181.07.07', '181.07.09', '181.07.11', '181.07.13', '181.07.15', '181.07.17', '181.07.19', '181.07.21', '181.07.23', '181.07.25', '181.07.27', '181.07.29', '181.07.31', '181.07.33', '181.07.35', '181.09.01', '181.09.03', '181.09.05', '181.09.07', '181.09.09', '181.09.11', '181.09.13', '181.09.15', '181.09.17', '181.09.19', '181.09.21', '181.09.23', '181.11.01', '181.11.03', '181.11.05', '181.11.07', '181.11.09', '431.01.07', '431.01.09', '431.01.03', '431.01.11', '431.01.13', '431.03.01', '431.03.03', '431.03.05', '431.03.07', '431.03.09', '431.03.11', '431.03.13', '431.03.15', '431.05.01', '431.05.03', '431.05.05', '431.05.07', '431.05.09', '431.05.11', '431.05.13', '431.05.15', '431.05.17', '431.07.01', '431.07.03', '431.07.05', '431.07.07', '431.07.09', '431.07.11', '431.07.13', '431.07.15', '431.09.01', '431.09.03', '431.09.05', '431.09.07', '431.09.09', '081.01.01', '081.01.03', '081.03.01', '081.03.03', '081.03.05', '081.03.07', '081.03.09', '081.03.11', '081.03.13', '081.05.01', '081.05.03', '081.05.05', '081.05.07', '081.05.09', '081.05.11', '081.05.13', '081.05.15', '081.05.17', '081.05.19', '081.05.21', '081.07.01', '081.07.03', '081.07.05', '081.07.07', '081.07.09', '081.07.11', '081.07.13', '081.07.15', '081.07.17', '081.07.19', '081.07.21', '081.09.01', '081.09.03', '081.09.05', '081.09.07', '081.09.09', '081.09.11', '081.09.13', '081.09.15', '081.09.17', '081.09.19', '081.09.21', '081.09.23', '081.09.25', '091.01.01', '091.01.03', '091.01.05', '091.01.07', '091.01.09', '091.01.11', '091.01.13', '091.03.01', '091.03.03', '091.03.05', '091.03.07', '091.03.09', '091.05.01', '091.05.03', '091.05.05', '091.05.07', '091.05.09', '091.05.11', '091.05.13', '091.07.01', '091.07.03', '091.07.05', '091.07.07', '091.07.09', '091.07.11', '091.07.13', '091.07.15', '091.07.17', '091.09.01', '091.09.03', '091.09.05', '091.09.07', '091.09.09', '091.09.11', '091.11.01', '091.11.03', '091.11.05', '091.11.07', '171.01.01', '171.01.03', '171.01.05', '171.01.07', '171.03.01', '171.03.03', '171.03.05', '171.03.07', '171.03.09', '171.05.01', '171.05.03', '171.05.05', '171.05.07', '171.07.01', '171.07.03', '171.07.05', '201.01.01', '201.01.03', '201.01.05', '201.01.07', '201.01.09', '201.01.11', '201.01.13', '201.01.15', '201.03.01', '201.03.03', '201.03.05', '201.03.07', '201.03.09', '201.03.11', '201.03.13', '201.05.01', '201.05.03', '201.05.05', '201.07.01', '201.07.03', '201.07.05', '201.07.07', '201.07.09', '201.09.01', '201.09.03', '201.09.05', '201.09.07', '201.09.09', '201.09.11', '201.09.13', '201.11.01', '201.11.03', '201.11.05', '201.11.07', '201.11.09', '201.13.01', '201.13.03', '201.13.05', '201.13.07', '201.13.09', '201.13.11', '201.13.13', '201.15.01', '201.15.03', '201.15.05', '201.15.07', '201.15.09', '271.01.01', '271.01.03', '271.03.01', '271.03.03', '271.03.05', '271.03.07', '271.03.09', '271.03.11', '271.81.01', '271.81.03', '301.01.01', '301.01.03', '301.01.05', '301.03.01', '301.03.03', '301.03.05', '301.03.07', '301.03.09', '301.03.11', '301.03.13', '301.05.01', '301.05.03', '301.05.05', '301.05.07', '301.05.09', '301.05.11', '301.05.13', '301.05.15', '301.05.17', '301.05.19', '301.05.21', '301.05.23', '301.05.25', '301.07.01', '301.07.03', '301.07.05', '301.07.07', '301.07.09', '301.07.11', '301.07.13', '301.07.15', '301.07.17', '301.07.19', '301.07.21', '301.07.23', '301.07.25', '301.07.27', '301.07.29', '061.01.03', '061.01.05', '061.01.01', '061.01.09', '061.01.11', '061.01.07', '061.03.01', '061.03.03', '061.03.05', '061.03.07', '061.03.09', '061.03.11', '061.05.01', '061.05.03', '061.05.05', '061.05.07', '061.05.09', '061.07.01', '061.07.03', '3061.07.05', '061.07.07', '061.07.09', '061.07.11', '131.01.01', '131.01.02', '131.01.03', '131.01.05', '131.03.01', '131.03.03', '131.03.05', '131.03.07', '131.03.09', '131.03.11', '131.03.13', '131.03.15', '131.03.17', '131.05.01', '131.05.03', '131.05.05', '131.07.01', '131.07.03', '131.07.05', '131.07.07', '131.07.09', '231.01.01', '231.01.11', '231.01.07', '231.01.09', '231.01.03', '231.01.05', '231.01.13', '231.81.03', '231.81.01', '231.81.05', '591.01.01', '591.03.01', '591.03.03', '591.03.05', '591.03.07', '591.05.01', '591.05.02', '591.05.03', '591.05.05', '591.05.07', '591.05.09', '451.01.01', '451.01.03', '451.01.05', '451.01.07', '451.01.09', '451.03.01', '451.03.03', '451.03.05', '451.03.07', '451.03.09', '451.03.11', '451.03.13', '451.03.15', '451.03.17', '451.05.01', '451.05.03', '451.07.01', '451.07.03', '451.07.05', '451.07.07', '451.07.09', '451.07.11', '451.07.13', '051.01.01', '051.01.03', '051.01.05', '051.01.07', '051.03.01', '051.03.03', '051.03.05', '051.03.07', '051.05.01', '051.05.03', '051.05.05', '051.05.07', '051.05.09', '051.05.11', '051.05.13', '051.05.15', '051.05.17', '051.05.19', '051.05.21', '051.05.23', '051.05.25', '051.07.01', '051.07.03', '051.07.05', '051.07.07', '051.07.09', '051.07.11', '051.07.13', '051.07.15', '051.07.17', '051.07.19', '051.07.21', '051.07.23', '051.07.25', '051.07.27', '531.01.01', '531.01.03', '531.01.05', '531.01.07', '531.01.09', '531.03.01', '531.03.03', '531.03.05', '531.03.07', '531.03.09', '531.03.11', '531.03.13', '531.03.15', '531.03.17', '531.03.19', '531.03.21', '531.03.23', '531.05.01', '531.05.03', '531.05.05', '531.05.07', '531.05.09', '531.05.11', '531.05.13', '531.05.15', '531.05.17', '531.07.01', '531.07.03', '531.07.05', '531.07.07', '531.07.09', '531.07.11', '531.07.13', '531.07.15', '531.07.17', '531.07.19', '531.07.21', '531.09.01', '531.09.03', '531.09.05', '531.09.07', '531.09.09', '531.09.11', '531.09.13', '531.09.15', '531.09.17', '531.09.19', '531.09.21', '531.09.23', '561.01.01', '561.01.03', '561.01.05', '561.01.07', '561.01.11', '561.03.01', '561.03.03', '561.03.05', '561.03.07', '561.03.09', '561.03.11', '561.05.01', '561.05.03', '561.05.05', '561.05.07', '561.05.09', '561.05.11', '561.05.13', '561.05.15', '561.05.17', '561.07.01', '561.07.03', '561.07.05', '561.07.07', '561.07.09', '561.07.11', '561.09.01', '561.09.03', '561.09.05', '561.09.07', '561.09.09', '561.09.11', '561.09.13', '561.11.01', '561.11.03', '561.11.05', '561.11.07', '561.11.09', '561.11.11', '561.11.13', '561.11.15', '561.13.01', '561.13.03', '561.13.05', '561.13.07', '561.13.09', '561.13.11', '561.13.13', '151.01.01', '151.03.01', '151.03.03', '151.03.05', '151.03.07', '151.03.09', '151.03.11', '151.03.13', '151.03.15', '151.03.17', '151.03.19', '151.03.21', '151.03.23', '151.05.01', '151.05.03', '151.05.05', '151.05.07', '151.05.09', '151.05.11', '151.05.13', '151.05.15', '151.07.01', '151.07.03', '151.07.05', '151.07.07', '151.07.09', '151.07.11', '151.07.13', '151.09.01', '151.09.03', '151.09.05', '151.09.07', '151.09.09', '151.09.11', '227.03.05', '227.03.11', '227.03.13', '227.03.21', '227.05.01', '227.05.05', '227.05.07', '227.05.09', '331.01.01', '331.01.03', '331.03.01', '331.03.03', '331.03.05', '331.03.07', '331.03.09', '331.03.11',
	    '331.03.13', '331.03.15', '331.03.17', '331.05.01', '331.05.03', '331.05.05', '331.05.07', '331.05.09', '331.05.11', '331.05.13', '331.05.15', '511.01.01', '511.01.03', '511.01.05', '511.01.06', '511.01.07', '511.03.01', '511.03.03', '511.03.05', '511.03.07', '511.03.09', '511.03.11', '511.03.13', '511.81.03', '571.01.01', '571.01.03', '571.01.05', '571.01.07', '571.01.11', '571.03.01', '571.03.03', '571.03.07', '571.03.09', '571.03.15', '571.03.17', '571.03.19', '571.05.01', '571.05.03', '571.05.05', '571.05.07', '571.05.09', '571.05.11', '571.05.13', '571.05.15', '571.05.17', '571.05.19', '571.05.21', '571.05.23', '571.05.25', '571.05.27']

	# Uncomment if you want to use for the 1st time, this fills all the tables.
	###########################################
	# db.createTables()
	# for code in codes:
	# 	data= readDataFromJsonFile("./data1/"+code+".json")
	# 	db.fillTable(code, data)
	###########################################

	querries= {4: "SELECT SUM(OBSERVATION) FROM Démographie WHERE INDICATEUR= 'Population municipale' AND TYPE= 'E' AND SEX= 'E';", 
	5: "SELECT code_commune FROM Démographie WHERE INDICATEUR= 'Population municipale' AND TYPE= 'E' AND SEX= 'E' ORDER BY OBSERVATION DESC LIMIT 10;",
	6: """
	SELECT COUNT(code_commune) FROM Communes
	WHERE (code_region) <> 141 and code_region <> 421
	and 
	code_commune in (SELECT code_commune FROM Démographie WHERE TYPE= 'E' and SEX= 'E' and INDICATEUR= 'Population municipale' and OBSERVATION >= 50000)
	and
	code_commune in (SELECT code_commune FROM Activité_et_emploi WHERE TYPE= 'E' and SEX= 'E' and INDICATEUR= 'Taux de chômage' and OBSERVATION <= 15)
	and
	code_commune in (SELECT code_commune FROM Activité_et_emploi WHERE TYPE= 'E' and SEX= 'F' and INDICATEUR= \"Taux net d'activité\" and OBSERVATION >= 30)
	and
	code_commune in (SELECT code_commune FROM Education_et_alphabétisation WHERE TYPE= 'E' and SEX= 'E' and INDICATEUR= \"Taux d'analphabétisme\" and OBSERVATION <= 20);
	""",
	7: "SELECT ROUND(AVG(Handicap.OBSERVATION), 2) AS TAUX_MOYEN, Communes.code_province FROM Communes INNER JOIN Handicap ON Communes.code_commune= Handicap.code_commune and Handicap.TYPE= 'E' and Handicap.SEX= 'E' GROUP BY Communes.code_province ORDER BY TAUX_MOYEN LIMIT 1;",
	8: "SELECT ROUND(AVG(OBSERVATION), 2), code_region, TYPE, SEX FROM Communes INNER JOIN Démographie ON Démographie.code_commune= Communes.code_commune AND Démographie.INDICATEUR='Âge moyen au premier mariage' AND Démographie.TYPE != 'E' AND Démographie.SEX != 'E' GROUP BY code_region, TYPE, SEX;",
	9: "SELECT code_province, OBSERVATION FROM Communes INNER JOIN Education_et_alphabétisation ON Education_et_alphabétisation.code_commune= Communes.code_commune AND Education_et_alphabétisation.INDICATEUR= \"Taux d'analphabétisme\" AND Education_et_alphabétisation.TYPE = 'E' AND Education_et_alphabétisation.SEX = 'E' ORDER BY OBSERVATION DESC LIMIT 10;",
	10: """
	SELECT a.code_commune, a.INDICATEUR, a.OBSERVATION FROM Education_et_alphabétisation as a 
	INNER JOIN 
	(SELECT MAX(OBSERVATION) as x, code_commune FROM Education_et_alphabétisation WHERE INDICATEUR LIKE \"Niveau d'études%\" and TYPE= 'E' and SEX= 'E' GROUP BY code_commune) AS b
	on a.code_commune= b.code_commune and a.OBSERVATION= x
	WHERE
	a.INDICATEUR LIKE \"Niveau d'études%\" and a.TYPE= 'E' and a.SEX= 'E';
	""",
	11:"""
	SELECT a.code_commune, a.INDICATEUR, a.OBSERVATION, b.INDICATEUR, b.OBSERVATION FROM Langues_locales_utilisées as a
	INNER JOIN
	(SELECT code_commune, INDICATEUR, OBSERVATION FROM Langues_locales_utilisées WHERE INDICATEUR= "Langues locales utilisées (non exclusives)_Tamazight" AND TYPE= 'E' and SEX= 'E') AS b
	ON a.code_commune= b.code_commune
	WHERE
	a.INDICATEUR= "Langues locales utilisées (non exclusives)_Tachelhit" and a.TYPE= 'E' and a.SEX= 'E'
	and (a.OBSERVATION + b.observation) >= 50 and a.OBSERVATION > b.OBSERVATION;
	""",
	12:"""
	SELECT COUNT(a.code_commune)
	FROM Conditions_d_habitat as a
	INNER JOIN (SELECT code_commune, INDICATEUR, OBSERVATION 
	FROM Conditions_d_habitat 
	WHERE INDICATEUR= "Equipements ménagers_Parabole" and TYPE= 'E') as b 
	ON a.code_commune= b.code_commune 
	WHERE a.TYPE= 'E' and a.INDICATEUR= "Equipements ménagers_Réfrigérateur" and a.OBSERVATION < b.OBSERVATION;
	""",
	13: 

	}

# need to modify !!! can't be rabat or casa: 04 or 06

	for key in querries.keys():
		print("Question " + str(key))
		print(db.execute(querries[key]))
		print("______________________________")

if __name__ == '__main__':
	main()

'''

SELECT * FROM Communes INNER JOIN Démographie ON Démographie.code_commune= Communes.code_commune AND Démographie.INDICATEUR='Âge moyen au premier mariage' AND Démographie.TYPE != 'E' AND Démographie.SEX != 'E';

SELECT AVG(OBSERVATION), code_commune WHERE INDICATEUR='Âge moyen au premier mariage' AND TYPE != 'E' AND SEX != 'E' GROUPBY TYPE;

SELECT AVG(OBSERVATION), code_commune FROM Démographie WHERE INDICATEUR='Âge moyen au premier mariage' AND TYPE != 'E' AND SEX != 'E' GROUPBY TYPE;

SELECT AVG(OBSERVATION), code_region, TYPE, SEX FROM Communes  INNER JOIN Démographie ON Démographie.code_commune= Communes.code_commune AND Démographie.INDICATEUR='Âge moyen au premier mariage' AND Démographie.TYPE != 'E' AND Démographie.SEX != 'E' GROUP BY code_region, TYPE, SEX;

SELECT OBSERVATION, code_commune, INDICATEUR FROM Education_et_alphabétisation WHERE INDICATEUR LIKE "Niveau d'études%" and TYPE= 'E' and SEX= 'E';


SELECT MAX(OBSERVATION), code_commune FROM Education_et_alphabétisation WHERE INDICATEUR LIKE "Niveau d'études%" and TYPE= 'E' and SEX= 'E' GROUP BY code_commune;
SELECT * FROM (SELECT ID, MAX(OBSERVATION), code_commune, INDICATEUR FROM Education_et_alphabétisation WHERE INDICATEUR LIKE "Niveau d'études%" and TYPE= 'E' and SEX= 'E' GROUP BY code_commune);

SELECT a.code_commune, a.INDICATEUR, a.OBSERVATION FROM Education_et_alphabétisation as a INNER JOIN (SELECT MAX(OBSERVATION) as x, code_commune FROM Education_et_alphabétisation WHERE INDICATEUR LIKE "Niveau d'études%" and TYPE= 'E' and SEX= 'E' GROUP BY code_commune) AS b on a.code_commune= b.code_commune and a.OBSERVATION= x WHERE a.INDICATEUR LIKE "Niveau d'études%" and a.TYPE= 'E' and a.SEX= 'E' ;
SELECT OBSERVATION, code_commune, INDICATEUR FROM Education_et_alphabétisation WHERE INDICATEUR LIKE "Niveau d'études%" and TYPE= 'E' and SEX= 'E';

SELECT a.code_commune, a.INDICATEUR, a.OBSERVATION, b.INDICATEUR, b.OBSERVATION FROM Langues_locales_utilisées as a INNER JOIN (SELECT code_commune, INDICATEUR, OBSERVATION FROM Langues_locales_utilisées WHERE INDICATEUR= "Langues locales utilisées (non exclusives)_Tamazight" AND TYPE= 'E' and SEX= 'E') AS b ON a.code_commune= b.code_commune WHERE a.INDICATEUR= "Langues locales utilisées (non exclusives)_Tachelhit" and a.TYPE= 'E' and a.SEX= 'E' and (a.OBSERVATION + b.observation) >= 50 and a.OBSERVATION > b.OBSERVATION;

SELECT code_commune, INDICATEUR, OBSERVATION FROM Langues_locales_utilisées WHERE INDICATEUR= "Langues locales utilisées (non exclusives)_Tachelhit" AND TYPE= 'E' and SEX= 'E';

SELECT a.code_commune, a.INDICATEUR, a.OBSERVATION, b.INDICATEUR, b.OBSERVATION FROM Conditions_d_habitat as a INNER JOIN (SELECT code_commune, INDICATEUR, OBSERVATION FROM Conditions_d_habitat WHERE INDICATEUR= "Equipements ménagers_Parabole" and TYPE= 'E') as b ON a.code_commune= b.code_commune WHERE a.TYPE= 'E' and a.INDICATEUR= "Equipements ménagers_Réfrigérateur" and a.OBSERVATION < b.OBSERVATION;



'''
